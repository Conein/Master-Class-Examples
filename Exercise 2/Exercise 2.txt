OBJECT Table 91 User Setup
{
  OBJECT-PROPERTIES
  {
    Date=26-01-17;
    Time=14:36:13;
    Modified=Yes;
    Version List=NAVW110.00,Exercise 1;
  }
  PROPERTIES
  {
    OnDelete=VAR
               NotificationSetup@1000 : Record 1512;
             BEGIN
               NotificationSetup.SETRANGE("User ID","User ID");
               NotificationSetup.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=User Setup;
               NLD=Gebruikersinstellingen];
    LookupPageID=Page119;
    DrillDownPageID=Page119;
  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=VAR
                                                                UserMgt@1000 : Codeunit 418;
                                                              BEGIN
                                                                UserMgt.ValidateUserID("User ID");
                                                              END;

                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              NLD=Gebruikers-id];
                                                   NotBlank=Yes }
    { 2   ;   ;Allow Posting From  ;Date          ;CaptionML=[ENU=Allow Posting From;
                                                              NLD=Boeken toegest. vanaf] }
    { 3   ;   ;Allow Posting To    ;Date          ;CaptionML=[ENU=Allow Posting To;
                                                              NLD=Boeken toegest. tot] }
    { 4   ;   ;Register Time       ;Boolean       ;CaptionML=[ENU=Register Time;
                                                              NLD=Tijd registreren] }
    { 10  ;   ;Salespers./Purch. Code;Code10      ;TableRelation=Salesperson/Purchaser.Code;
                                                   OnValidate=VAR
                                                                UserSetup@1000 : Record 91;
                                                              BEGIN
                                                                IF "Salespers./Purch. Code" <> '' THEN BEGIN
                                                                  UserSetup.SETCURRENTKEY("Salespers./Purch. Code");
                                                                  UserSetup.SETRANGE("Salespers./Purch. Code","Salespers./Purch. Code");
                                                                  IF UserSetup.FINDFIRST THEN
                                                                    ERROR(Text001,"Salespers./Purch. Code",UserSetup."User ID");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Salespers./Purch. Code;
                                                              NLD=Verkoper/Inkoper] }
    { 11  ;   ;Approver ID         ;Code50        ;TableRelation="User Setup"."User ID";
                                                   OnValidate=BEGIN
                                                                IF "Approver ID" = "User ID" THEN
                                                                  FIELDERROR("Approver ID");
                                                              END;

                                                   OnLookup=VAR
                                                              UserSetup@1000 : Record 91;
                                                            BEGIN
                                                              UserSetup.SETFILTER("User ID",'<>%1',"User ID");
                                                              IF PAGE.RUNMODAL(PAGE::"Approval User Setup",UserSetup) = ACTION::LookupOK THEN
                                                                VALIDATE("Approver ID",UserSetup."User ID");
                                                            END;

                                                   CaptionML=[ENU=Approver ID;
                                                              NLD=Fiatteur-id] }
    { 12  ;   ;Sales Amount Approval Limit;Integer;OnValidate=BEGIN
                                                                IF "Unlimited Sales Approval" AND ("Sales Amount Approval Limit" <> 0) THEN
                                                                  ERROR(Text003,FIELDCAPTION("Sales Amount Approval Limit"),FIELDCAPTION("Unlimited Sales Approval"));
                                                                IF "Sales Amount Approval Limit" < 0 THEN
                                                                  ERROR(Text005);
                                                              END;

                                                   CaptionML=[ENU=Sales Amount Approval Limit;
                                                              NLD=Limiet voor goedkeuring verkoopbedrag];
                                                   BlankZero=Yes }
    { 13  ;   ;Purchase Amount Approval Limit;Integer;
                                                   OnValidate=BEGIN
                                                                IF "Unlimited Purchase Approval" AND ("Purchase Amount Approval Limit" <> 0) THEN
                                                                  ERROR(Text003,FIELDCAPTION("Purchase Amount Approval Limit"),FIELDCAPTION("Unlimited Purchase Approval"));
                                                                IF "Purchase Amount Approval Limit" < 0 THEN
                                                                  ERROR(Text005);
                                                              END;

                                                   CaptionML=[ENU=Purchase Amount Approval Limit;
                                                              NLD=Limiet voor goedkeuring inkoopbedrag];
                                                   BlankZero=Yes }
    { 14  ;   ;Unlimited Sales Approval;Boolean   ;OnValidate=BEGIN
                                                                IF "Unlimited Sales Approval" THEN
                                                                  "Sales Amount Approval Limit" := 0;
                                                              END;

                                                   CaptionML=[ENU=Unlimited Sales Approval;
                                                              NLD=Onbeperkte goedkeuring van verkopen] }
    { 15  ;   ;Unlimited Purchase Approval;Boolean;OnValidate=BEGIN
                                                                IF "Unlimited Purchase Approval" THEN
                                                                  "Purchase Amount Approval Limit" := 0;
                                                              END;

                                                   CaptionML=[ENU=Unlimited Purchase Approval;
                                                              NLD=Onbeperkte goedkeuring van inkopen] }
    { 16  ;   ;Substitute          ;Code50        ;TableRelation="User Setup"."User ID";
                                                   OnValidate=BEGIN
                                                                IF Substitute = "User ID" THEN
                                                                  FIELDERROR(Substitute);
                                                              END;

                                                   OnLookup=VAR
                                                              UserSetup@1000 : Record 91;
                                                            BEGIN
                                                              UserSetup.SETFILTER("User ID",'<>%1',"User ID");
                                                              IF PAGE.RUNMODAL(PAGE::"Approval User Setup",UserSetup) = ACTION::LookupOK THEN
                                                                VALIDATE(Substitute,UserSetup."User ID");
                                                            END;

                                                   CaptionML=[ENU=Substitute;
                                                              NLD=Vervanger] }
    { 17  ;   ;E-Mail              ;Text100       ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              NLD=E-mail] }
    { 19  ;   ;Request Amount Approval Limit;Integer;
                                                   OnValidate=BEGIN
                                                                IF "Unlimited Request Approval" AND ("Request Amount Approval Limit" <> 0) THEN
                                                                  ERROR(Text003,FIELDCAPTION("Request Amount Approval Limit"),FIELDCAPTION("Unlimited Request Approval"));
                                                                IF "Request Amount Approval Limit" < 0 THEN
                                                                  ERROR(Text005);
                                                              END;

                                                   CaptionML=[ENU=Request Amount Approval Limit;
                                                              NLD=Limiet voor goedkeuring aanvraagbedrag];
                                                   BlankZero=Yes }
    { 20  ;   ;Unlimited Request Approval;Boolean ;OnValidate=BEGIN
                                                                IF "Unlimited Request Approval" THEN
                                                                  "Request Amount Approval Limit" := 0;
                                                              END;

                                                   CaptionML=[ENU=Unlimited Request Approval;
                                                              NLD=Onbeperkt aanvragen van goedkeuring] }
    { 21  ;   ;Approval Administrator;Boolean     ;OnValidate=VAR
                                                                UserSetup@1000 : Record 91;
                                                              BEGIN
                                                                IF "Approval Administrator" THEN BEGIN
                                                                  UserSetup.SETRANGE("Approval Administrator",TRUE);
                                                                  IF NOT UserSetup.ISEMPTY THEN
                                                                    FIELDERROR("Approval Administrator");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Approval Administrator;
                                                              NLD=Beheerder goedkeuringssysteem] }
    { 31  ;   ;License Type        ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(User."License Type" WHERE (User Name=FIELD(User ID)));
                                                   CaptionML=[ENU=License Type;
                                                              NLD=Licentietype];
                                                   OptionCaptionML=[ENU=Full User,Limited User,Device Only User,Windows Group,External User;
                                                                    NLD=Volwaardige gebruiker,Beperkte gebruiker,Alleen apparaat,Windows-groep,Externe gebruiker];
                                                   OptionString=Full User,Limited User,Device Only User,Windows Group,External User }
    { 950 ;   ;Time Sheet Admin.   ;Boolean       ;CaptionML=[ENU=Time Sheet Admin.;
                                                              NLD=Urenstaat-admin.] }
    { 5600;   ;Allow FA Posting From;Date         ;CaptionML=[ENU=Allow FA Posting From;
                                                              NLD=VA-boeken toegest. vanaf] }
    { 5601;   ;Allow FA Posting To ;Date          ;CaptionML=[ENU=Allow FA Posting To;
                                                              NLD=VA-boeken toegest. tot] }
    { 5700;   ;Sales Resp. Ctr. Filter;Code10     ;TableRelation="Responsibility Center".Code;
                                                   CaptionML=[ENU=Sales Resp. Ctr. Filter;
                                                              NLD=Verkoopdivisiefilter] }
    { 5701;   ;Purchase Resp. Ctr. Filter;Code10  ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Purchase Resp. Ctr. Filter;
                                                              NLD=Inkoopdivisiefilter] }
    { 5900;   ;Service Resp. Ctr. Filter;Code10   ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Service Resp. Ctr. Filter;
                                                              NLD=Servicedivisiefilter] }
    { 50000;  ;Example Enabled     ;Boolean        }
  }
  KEYS
  {
    {    ;User ID                                 ;Clustered=Yes }
    {    ;Salespers./Purch. Code                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=The %1 Salesperson/Purchaser code is already assigned to another User ID %2.;NLD=Verkoper-/inkopercode %1 is al toegewezen aan gebruikers-id %2.';
      Text003@1002 : TextConst 'ENU="You cannot have both a %1 and %2. ";NLD="U kunt niet zowel %1 als %2 hebben. "';
      Text005@1004 : TextConst 'ENU=You cannot have approval limits less than zero.;NLD=Goedkeuringslimieten mogen niet kleiner dan nul zijn.';

    PROCEDURE CreateApprovalUserSetup@3(User@1000 : Record 2000000120);
    VAR
      UserSetup@1001 : Record 91;
      ApprovalUserSetup@1002 : Record 91;
    BEGIN
      ApprovalUserSetup.INIT;
      ApprovalUserSetup.VALIDATE("User ID",User."User Name");
      ApprovalUserSetup.VALIDATE("Sales Amount Approval Limit",GetDefaultSalesAmountApprovalLimit);
      ApprovalUserSetup.VALIDATE("Purchase Amount Approval Limit",GetDefaultPurchaseAmountApprovalLimit);
      ApprovalUserSetup.VALIDATE("E-Mail",User."Contact Email");
      UserSetup.SETRANGE("Sales Amount Approval Limit",UserSetup.GetDefaultSalesAmountApprovalLimit);
      IF UserSetup.FINDFIRST THEN
        ApprovalUserSetup.VALIDATE("Approver ID",UserSetup."Approver ID");
      IF ApprovalUserSetup.INSERT THEN;
    END;

    PROCEDURE GetDefaultSalesAmountApprovalLimit@1() : Integer;
    VAR
      UserSetup@1001 : Record 91;
      DefaultApprovalLimit@1000 : Integer;
      LimitedApprovers@1002 : Integer;
    BEGIN
      UserSetup.SETRANGE("Unlimited Sales Approval",FALSE);

      IF UserSetup.FINDFIRST THEN BEGIN
        DefaultApprovalLimit := UserSetup."Sales Amount Approval Limit";
        LimitedApprovers := UserSetup.COUNT;
        UserSetup.SETRANGE("Sales Amount Approval Limit",DefaultApprovalLimit);
        IF LimitedApprovers = UserSetup.COUNT THEN
          EXIT(DefaultApprovalLimit);
      END;

      // Return 0 if no user setup exists or no default value is found
      EXIT(0);
    END;

    PROCEDURE GetDefaultPurchaseAmountApprovalLimit@2() : Integer;
    VAR
      UserSetup@1002 : Record 91;
      DefaultApprovalLimit@1001 : Integer;
      LimitedApprovers@1000 : Integer;
    BEGIN
      UserSetup.SETRANGE("Unlimited Purchase Approval",FALSE);

      IF UserSetup.FINDFIRST THEN BEGIN
        DefaultApprovalLimit := UserSetup."Purchase Amount Approval Limit";
        LimitedApprovers := UserSetup.COUNT;
        UserSetup.SETRANGE("Purchase Amount Approval Limit",DefaultApprovalLimit);
        IF LimitedApprovers = UserSetup.COUNT THEN
          EXIT(DefaultApprovalLimit);
      END;

      // Return 0 if no user setup exists or no default value is found
      EXIT(0);
    END;

    PROCEDURE HideExternalUsers@5();
    VAR
      PermissionManager@1001 : Codeunit 9002;
      OriginalFilterGroup@1000 : Integer;
    BEGIN
      IF NOT PermissionManager.SoftwareAsAService THEN
        EXIT;

      OriginalFilterGroup := FILTERGROUP;
      FILTERGROUP := 2;
      CALCFIELDS("License Type");
      SETFILTER("License Type",'<>%1',"License Type"::"External User");
      FILTERGROUP := OriginalFilterGroup;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 50000 Example Setup
{
  OBJECT-PROPERTIES
  {
    Date=04-11-15;
    Time=20:18:43;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Example Enabled     ;Boolean       ;CaptionML=ENU=Example Enabled }
    { 3   ;   ;Example Document Nos.;Code10       ;TableRelation="No. Series" }
    { 10  ;   ;Example Person Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Example Person Nos. }
    { 20  ;   ;Example Product Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Example Product Nos. }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE InitSetupRecord@50000();
    BEGIN
      IF NOT GET THEN BEGIN
        INIT;
        INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 50010 Example Person
{
  OBJECT-PROPERTIES
  {
    Date=14-02-17;
    Time=08:39:54;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ExampleDocumentNoVisibility@1000000000 : Codeunit 51400;
             BEGIN
               IF "No." = '' THEN
                 IF ExampleDocumentNoVisibility.ExamplePersonNoSeriesIsDefault THEN BEGIN
                   ExampleSetup.GET;
                   ExampleSetup.TESTFIELD("Example Person Nos.");
                   NoSeriesMgt.InitSeries(ExampleSetup."Example Person Nos.",xRec."No. Series",0D,"No.","No. Series");
                 END;
             END;

    CaptionML=ENU=Example Person;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ExampleSetup.GET;
                                                                  NoSeriesMgt.TestManual(ExampleSetup."Example Person Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Name;
                                                              END;

                                                   CaptionML=ENU=Name }
    { 3   ;   ;Search Name         ;Code50        ;CaptionML=ENU=Search Name }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 5   ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 8   ;   ;Contact             ;Text50        ;CaptionML=ENU=Contact }
    { 9   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 39  ;   ;Blocked             ;Option        ;CaptionML=ENU=Blocked;
                                                   OptionCaptionML=ENU=" ,Ship,Invoice,All";
                                                   OptionString=[ ,Ship,Invoice,All] }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 92  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ExampleSetup@1001 : Record 50000;
      PostCode@1002 : Record 225;
      NoSeriesMgt@1000 : Codeunit 396;

    PROCEDURE AssistEdit@2(OldExamplePerson@1002 : Record 50010) : Boolean;
    VAR
      ExamplePerson@1001 : Record 50010;
    BEGIN
      WITH ExamplePerson DO BEGIN
        ExamplePerson := Rec;
        ExampleSetup.GET;
        ExampleSetup.TESTFIELD("Example Person Nos.");
        IF NoSeriesMgt.SelectSeries(ExampleSetup."Example Person Nos.",OldExamplePerson."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := ExamplePerson;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE FormatAddress@1(VAR AddrArray@1000 : ARRAY [8] OF Text[90]);
    VAR
      FormatAddress@1001 : Codeunit 365;
    BEGIN
      WITH FormatAddress DO
        FormatAddr(AddrArray,Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code")
    END;

    PROCEDURE FormatAddressArguments@3(VAR AddrArray@1001 : ARRAY [8] OF Text[90]);
    VAR
      AddressAgruments@1000 : TEMPORARY Record 50099;
    BEGIN
      WITH AddressAgruments DO BEGIN
        TRANSFERFIELDS(Rec);
        FormAddress(AddrArray);
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 50020 Example Product
{
  OBJECT-PROPERTIES
  {
    Date=26-05-15;
    Time=15:42:29;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 ExampleSetup.GET;
                 ExampleSetup.TESTFIELD("Example Product Nos.");
                 NoSeriesMgt.InitSeries(ExampleSetup."Example Product Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
             END;

    CaptionML=ENU=Example Person;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ExampleSetup.GET;
                                                                  NoSeriesMgt.TestManual(ExampleSetup."Example Product Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 3   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                  "Search Description" := Description;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 4   ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 8   ;   ;Sales Price         ;Decimal        }
    { 54  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 97  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ExampleSetup@1001 : Record 50000;
      NoSeriesMgt@1000 : Codeunit 396;

    PROCEDURE AssistEdit@2() : Boolean;
    BEGIN
      ExampleSetup.GET;
      ExampleSetup.TESTFIELD("Example Product Nos.");
      IF NoSeriesMgt.SelectSeries(ExampleSetup."Example Product Nos.",xRec."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE GetSalesPrice@1(PersonNo@1000 : Code[20]) : Decimal;
    VAR
      ExampleProductPriceMgt@1001 : Codeunit 50020;
    BEGIN
      WITH ExampleProductPriceMgt DO
        EXIT(GetSalesPrice(Rec, PersonNo));
    END;

    BEGIN
    END.
  }
}

OBJECT Table 50030 Example Product Price
{
  OBJECT-PROPERTIES
  {
    Date=26-05-15;
    Time=15:48:49;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Product No.         ;Code20        ;TableRelation="Example Product" }
    { 2   ;   ;Person No.          ;Code20        ;TableRelation="Example Person" }
    { 3   ;   ;Sales Price         ;Decimal        }
  }
  KEYS
  {
    {    ;Product No.,Person No.                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 50099 Address Agruments
{
  OBJECT-PROPERTIES
  {
    Date=15-09-16;
    Time=09:37:15;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 2   ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 5   ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 8   ;   ;Contact             ;Text50        ;CaptionML=ENU=Contact }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 92  ;   ;County              ;Text30        ;CaptionML=ENU=County }
  }
  KEYS
  {
    {    ;Name                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE FormAddress@2(VAR AddrArray@1000 : ARRAY [8] OF Text[90]);
    VAR
      FormatAddress@1001 : Codeunit 365;
    BEGIN
      WITH FormatAddress DO
        FormatAddr(AddrArray,Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code")
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50011 Example Enabled iFace
{
  OBJECT-PROPERTIES
  {
    Date=04-11-15;
    Time=19:51:56;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE CheckEnabled@2() : Boolean;
    VAR
      UserSetup@1000 : Record 91;
      ExampleSetup@1001 : Record 50000;
    BEGIN
      IF USERID <> '' THEN
        IF UserSetup.GET(USERID) THEN
          IF UserSetup."Example Enabled" THEN
            EXIT(TRUE);

      WITH ExampleSetup DO BEGIN
        GET;
        EXIT("Example Enabled");
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50020 Example Product Price Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=21-03-17;
    Time=10:22:05;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE GetSalesPrice@2(ExampleProduct@1001 : Record 50020;PersonNo@1000 : Code[20]) : Decimal;
    VAR
      ExampleProductPrice@1002 : Record 50030;
    BEGIN
      WITH ExampleProduct DO
        EXIT("Sales Price");

      WITH ExampleProductPrice DO BEGIN
        IF GET(ExampleProduct."No.", PersonNo) THEN
          EXIT("Sales Price");

        IF GET(ExampleProduct."No.") THEN
          EXIT("Sales Price");
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50098 Example Testrunner
{
  OBJECT-PROPERTIES
  {
    Date=04-11-15;
    Time=19:54:13;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
    Subtype=TestRunner;
    TestIsolation=Codeunit;
    OnRun=VAR
            ExampleTest@50000 : Codeunit 50099;
          BEGIN
            ExampleTest.RUN;
          END;

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Codeunit 50099 Example Test
{
  OBJECT-PROPERTIES
  {
    Date=26-07-16;
    Time=10:21:01;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [Test]
    PROCEDURE TestInitSetup@50000();
    VAR
      ExampleSetup@50000 : Record 50000;
    BEGIN
      WITH ExampleSetup DO BEGIN
        InitSetupRecord;
        GET;
      END;
    END;

    [Test]
    PROCEDURE CreateNoSeries@5();
    VAR
      ExampleSetup@1000 : Record 50000;
    BEGIN
      CreateNoSeriesHelper('PERSON', 'Persons', 'PERS0001');
      CreateNoSeriesHelper('PRODUCT', 'Products', 'PROD0001');
      WITH ExampleSetup DO BEGIN
        "Example Person Nos." := 'PERSON';
        "Example Product Nos." := 'PRODUCT';
        MODIFY;
      END;
      COMMIT;
    END;

    [Test]
    PROCEDURE CreatePerson@1();
    VAR
      ExamplePerson@1000 : Record 50010;
    BEGIN
      WITH ExamplePerson DO BEGIN
        INIT;
        INSERT(TRUE);
        VALIDATE(Name, 'Mark Brummel');
        Address := 'Street Somewhere';
        VALIDATE("Post Code", '90201');
        VALIDATE(City, 'Olst');
        TESTFIELD("Search Name", UPPERCASE(Name));
        MODIFY(TRUE);
      END;
      COMMIT;
    END;

    [Test]
    PROCEDURE CreateProduct@2();
    VAR
      ExampleProduct@1000 : Record 50020;
    BEGIN
      WITH ExampleProduct DO BEGIN
        INIT;
        INSERT(TRUE);
        VALIDATE(Description, 'Product');
        TESTFIELD("Search Description", UPPERCASE(Description));
        "Sales Price" := 10;
        MODIFY(TRUE);
      END;
    END;

    [Test]
    PROCEDURE CreateProductPrice@3();
    VAR
      ExampleProductPrice@1000 : Record 50030;
    BEGIN
      WITH ExampleProductPrice DO BEGIN
        "Person No." := 'PERS0001';
        "Product No." := 'PROD0001';
        "Sales Price" := 20;
        INSERT;
      END;
    END;

    [Test]
    PROCEDURE TestProductPrice@4();
    VAR
      ExampleProduct@1000 : Record 50020;
      PriceShouldBeErr@1001 : TextConst 'ENU=Price should be %1';
    BEGIN
      WITH ExampleProduct DO BEGIN
        GET('PROD0001');
        IF GetSalesPrice('') <> 10 THEN
          ERROR(PriceShouldBeErr, 10);
        IF GetSalesPrice('PERS0001') <> 20 THEN
          ERROR(PriceShouldBeErr, 20);
      END;
    END;

    [Test]
    PROCEDURE TestAddress@8();
    VAR
      ExamplePerson@1000 : Record 50010;
      AddrArray@1001 : ARRAY [80] OF Text[80];
      WrongAddressErr@1002 : TextConst 'ENU=Address is wrong %1';
    BEGIN
      WITH ExamplePerson DO BEGIN
        GET('PERS0001');
        FormatAddressArguments(AddrArray);
        IF AddrArray[3] <> '90201 Olst' THEN
          ERROR(WrongAddressErr, AddrArray[3]);
      END;
    END;

    LOCAL PROCEDURE CreateNoSeriesHelper@6(NoSeriesCode@1002 : Code[10];NoSeriesDescription@1001 : Text;NoSeriesStartingNo@1000 : Code[20]);
    VAR
      NoSeries@1004 : Record 308;
      NoSeriesLine@1003 : Record 309;
    BEGIN
      WITH NoSeries DO BEGIN
        Code := NoSeriesCode;
        Description := NoSeriesDescription;
        "Default Nos." := TRUE;
        "Manual Nos." := TRUE;
        INSERT;
      END;

      WITH NoSeriesLine DO BEGIN
        "Series Code" := NoSeriesCode;
        "Line No." := 10000;
        "Starting No." := NoSeriesStartingNo;
        INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50110 Example Notifications
{
  OBJECT-PROPERTIES
  {
    Date=21-03-17;
    Time=12:40:00;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Page,9060,OnOpenPageEvent)]
    LOCAL PROCEDURE OnOpenSalesActivitiesPage@1000000001(VAR Rec@1000000001 : Record 9053);
    VAR
      Customer@1000000002 : Record 18;
      MyNotification@1000000000 : Notification;
    BEGIN
      Customer.GET('10000');
      Customer.SETRECFILTER;

      MyNotification.MESSAGE := 'This is a notification';
      MyNotification.SCOPE := NOTIFICATIONSCOPE::LocalScope;
      MyNotification.SETDATA('HelloWorld', 'Hello World');
      MyNotification.SETDATA('Rec', Customer.GETVIEW);

      MyNotification.ADDACTION('Show Hello World',CODEUNIT::"Example Notification Actions",'ShowHelloWorld');
      MyNotification.ADDACTION('Open Filtered Customer List',CODEUNIT::"Example Notification Actions",'OpenCustomerList');
      MyNotification.SEND;
    END;

    [EventSubscriber(Page,50020,OnAfterGetRecordEvent)]
    LOCAL PROCEDURE ShowNotificationWhenNoProductPrices@1000000002(VAR Rec@1000000001 : Record 50020);
    VAR
      MyNotifications@1000000003 : Record 1518;
      ExampleProduct@1000000002 : Record 50020;
      ExampleProductPrice@1000000004 : Record 50030;
      MyNotification@1000000000 : Notification;
    BEGIN
      IF NOT MyNotifications.IsEnabled('ce50e6d7-ca3c-496d-8352-2f6cce9a4178') THEN
        EXIT;

      ExampleProductPrice.SETRANGE("Product No.", Rec."No.");
      IF NOT ExampleProductPrice.ISEMPTY THEN
        EXIT;

      ExampleProduct := Rec;
      ExampleProduct.SETRECFILTER;

      MyNotification.ID := 'ce50e6d7-ca3c-496d-8352-2f6cce9a4178';
      MyNotification.MESSAGE := 'There are no prices setup for this product, do you want to do this now?';
      MyNotification.SCOPE := NOTIFICATIONSCOPE::LocalScope;
      MyNotification.SETDATA('Rec', ExampleProduct.GETVIEW);

      MyNotification.ADDACTION('Yes', CODEUNIT::"Example Notification Actions", 'SetupPrices');
      MyNotification.ADDACTION('Do no show again', CODEUNIT::"Example Notification Actions", 'HideSetupPrices');
      MyNotification.SEND;
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50111 Example Notification Actions
{
  OBJECT-PROPERTIES
  {
    Date=21-03-17;
    Time=12:40:55;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ShowHelloWorld@1000000000(VAR MyNotification@1000000000 : Notification);
    BEGIN
      MESSAGE(MyNotification.GETDATA('HelloWorld'));
    END;

    PROCEDURE OpenCustomerList@1000000001(VAR MyNotification@1000000000 : Notification);
    VAR
      Customer@1000000001 : Record 18;
    BEGIN
      Customer.SETVIEW(MyNotification.GETDATA('Rec'));
      PAGE.RUN(0, Customer);
    END;

    PROCEDURE SetupPrices@1000000003(VAR MyNotification@1000000000 : Notification);
    VAR
      ExampleProduct@1000000001 : Record 50020;
      ExampleProductPrice@1000000002 : Record 50030;
    BEGIN
      ExampleProduct.SETVIEW(MyNotification.GETDATA('Rec'));
      ExampleProduct.FINDFIRST;
      ExampleProductPrice.SETRANGE("Product No.", ExampleProduct."No.");
      PAGE.RUN(0, ExampleProductPrice);
    END;

    PROCEDURE HideSetupPrices@1000000004(VAR MyNotification@1000000000 : Notification);
    VAR
      MyNotifications@1000000001 : Record 1518;
      NotificationID@1000000002 : GUID;
    BEGIN
      MyNotifications.LOCKTABLE;
      NotificationID := MyNotification.ID;
      IF MyNotifications.GET(USERID, NotificationID) THEN BEGIN
        MyNotifications.Enabled := FALSE;
        MyNotifications.MODIFY;
      END;
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50112 Example Notifications Init.
{
  OBJECT-PROPERTIES
  {
    Date=16-02-17;
    Time=08:41:07;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Page,1518,OnInitializingNotificationWithDefaultState)]
    LOCAL PROCEDURE OnInitializingNotificationWithDefaultState@15();
    VAR
      MyNotifications@1000 : Record 1518;
      ExampleProductPriceTxt@1000000000 : TextConst 'ENU=Show Create Example Price';
      ExampleProductPriceDescriptionTxt@1000000001 : TextConst 'ENU=Show Create Example Price';
    BEGIN
      MyNotifications.InsertDefaultWithTableNum('ce50e6d7-ca3c-496d-8352-2f6cce9a4178',
        ExampleProductPriceTxt,
        ExampleProductPriceDescriptionTxt,
        DATABASE::"Example Product");
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 51400 ExampleDocumentNoVisibility
{
  OBJECT-PROPERTIES
  {
    Date=14-02-17;
    Time=08:47:51;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ExamplePersonNoIsVisible@4() : Boolean;
    VAR
      NoSeries@1002 : Record 308;
      ExampleSetup@1000000000 : Page 50000;
      NoSeriesCode@1004 : Code[10];
    BEGIN
      NoSeriesCode := DetermineExamplePersonSeriesNo;

      IF NOT NoSeries.GET(NoSeriesCode) THEN BEGIN
        ExampleSetup.RUNMODAL;
        NoSeriesCode := DetermineExamplePersonSeriesNo;
        IF NOT NoSeries.GET(NoSeriesCode) THEN
          EXIT(TRUE);
      END;

      EXIT(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    PROCEDURE ExampleProductNoIsVisible@21() : Boolean;
    VAR
      NoSeries@1002 : Record 308;
      NoSeriesCode@1004 : Code[10];
    BEGIN
      NoSeriesCode := DetermineExampleProductSeriesNo;

      IF NOT NoSeries.GET(NoSeriesCode) THEN
        EXIT(TRUE);

      EXIT(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    PROCEDURE ExamplePersonNoSeriesIsDefault@10() : Boolean;
    VAR
      NoSeries@1000 : Record 308;
    BEGIN
      IF NoSeries.GET(DetermineExamplePersonSeriesNo) THEN
        EXIT(NoSeries."Default Nos.");

      EXIT(FALSE);
    END;

    PROCEDURE ExampleProductNoSeriesIsDefault@15() : Boolean;
    VAR
      NoSeries@1000 : Record 308;
    BEGIN
      IF NoSeries.GET(DetermineExampleProductSeriesNo) THEN
        EXIT(NoSeries."Default Nos.");

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE DetermineExamplePersonSeriesNo@7() : Code[10];
    VAR
      ExampleSetup@1001 : Record 50000;
    BEGIN
      ExampleSetup.GET;
      EXIT(ExampleSetup."Example Person Nos.");
    END;

    LOCAL PROCEDURE DetermineExampleProductSeriesNo@12() : Code[10];
    VAR
      ExampleSetup@1001 : Record 50000;
    BEGIN
      ExampleSetup.GET;
      EXIT(ExampleSetup."Example Product Nos.");
    END;

    LOCAL PROCEDURE ForceShowNoSeriesForDocNo@3(NoSeriesCode@1004 : Code[10]) : Boolean;
    VAR
      NoSeries@1005 : Record 308;
      NoSeriesRelationship@1001 : Record 310;
      NoSeriesMgt@1000 : Codeunit 396;
      SeriesDate@1002 : Date;
    BEGIN
      SeriesDate := WORKDATE;
      NoSeries.GET(NoSeriesCode);

      NoSeriesRelationship.SETRANGE(Code,NoSeriesCode);
      IF NOT NoSeriesRelationship.ISEMPTY THEN
        EXIT(TRUE);

      IF NoSeries."Manual Nos." OR (NoSeries."Default Nos." = FALSE) THEN
        EXIT(TRUE);

      EXIT(NoSeriesMgt.GetNextNo3(NoSeriesCode,SeriesDate,FALSE,TRUE) = '');
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 60000 Example Upgrade Extension
{
  OBJECT-PROPERTIES
  {
    Date=21-03-17;
    Time=12:44:44;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE OnNavAppUpgradePerDatabase@2();
    BEGIN
    END;

    PROCEDURE OnNavAppUpgradePerCompany@3();
    VAR
      RecRef@1000000000 : RecordRef;
    BEGIN
      NAVAPP.RESTOREARCHIVEDATA(DATABASE::"User Setup", FALSE);
    END;

    BEGIN
    END.
  }
}

OBJECT Page 119 User Setup
{
  OBJECT-PROPERTIES
  {
    Date=26-01-17;
    Time=14:36:28;
    Modified=Yes;
    Version List=NAVW110.00,Exercise 1;
  }
  PROPERTIES
  {
    CaptionML=[ENU=User Setup;
               NLD=Gebruikersinstellingen];
    SourceTable=Table91;
    PageType=List;
    OnOpenPage=BEGIN
                 HideExternalUsers;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a user ID.;
                           NLD=Hiermee wordt een gebruikers-id opgegeven.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User ID" }

    { 1000000000;2;Field  ;
                SourceExpr="Example Enabled" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the earliest date on which the user is allowed to post to the company.;
                           NLD=Hiermee wordt de vroegste datum opgegeven waarop de gebruiker naar het bedrijf mag boeken.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Posting From" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date on which the user is allowed to post to the company.;
                           NLD=Hiermee wordt de laatste datum opgegeven waarop de gebruiker naar het bedrijf mag boeken.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Posting To" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to register the user's time usage defined as the time spent from when the user logs in to when the user logs out.;
                           NLD=Hiermee wordt opgegeven of het tijdsgebruik van de gebruiker moeten worden geregistreerd, gedefinieerd als tijd die is besteed vanaf het aanmelden door de gebruiker tot het afmelden door de gebruiker.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Register Time" }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the responsibility center to which you want to assign the user.;
                           NLD=Hiermee wordt de code opgegeven voor de divisie waaraan u de gebruiker wilt toewijzen.];
                SourceExpr="Sales Resp. Ctr. Filter" }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the responsibility center to which you want to assign the user.;
                           NLD=Hiermee wordt de code opgegeven voor de divisie waaraan u de gebruiker wilt toewijzen.];
                SourceExpr="Purchase Resp. Ctr. Filter" }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the responsibility center you want to assign to the user. The user will only be able to see service documents for the responsibility center specified in the field. This responsibility center will also be the default responsibility center when the user creates new service documents.;
                           NLD=Hiermee wordt de code opgegeven voor de divisie waaraan u de gebruiker wilt toewijzen. De gebruiker kan alleen de servicedocumenten bekijken voor de divisie die in het veld is opgegeven. Deze divisie is ook de standaarddivisie wanneer de gebruiker nieuwe servicedocumenten maakt.];
                SourceExpr="Service Resp. Ctr. Filter" }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if a user is a time sheet administrator. A time sheet administrator can access any time sheet and then edit, change, or delete it.;
                           NLD=Hiermee wordt opgegeven of een gebruiker een beheerder van urenstaten is. Een beheerder van urenstaten heeft toegang tot elke urenstaat en kan deze bewerken, wijzigen of verwijderen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Time Sheet Admin." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50000 Example Setup
{
  OBJECT-PROPERTIES
  {
    Date=26-05-15;
    Time=15:45:30;
    Modified=Yes;
    Version List=Exercise 1;
  }
  PROPERTIES
  {
    CaptionML=ENU=Example Setup;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50000;
    PageType=Card;
    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                SourceExpr="Example Enabled" }

    { 3   ;1   ;Group     ;
                CaptionML=ENU=Numbering }

    { 4   ;2   ;Field     ;
                SourceExpr="Example Person Nos." }

    { 5   ;2   ;Field     ;
                SourceExpr="Example Product Nos." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50010 Example Person Card
{
  OBJECT-PROPERTIES
  {
    Date=14-02-17;
    Time=08:38:17;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
    SourceTable=Table50010;
    PageType=Card;
    OnOpenPage=BEGIN
                 SetNoFieldVisible;
               END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr=Name }

    { 5   ;2   ;Field     ;
                SourceExpr=Address }

    { 6   ;2   ;Field     ;
                SourceExpr=City }

    { 7   ;2   ;Field     ;
                SourceExpr=Contact }

    { 9   ;2   ;Field     ;
                SourceExpr="Country/Region Code" }

    { 10  ;2   ;Field     ;
                SourceExpr="Post Code" }

    { 11  ;2   ;Field     ;
                SourceExpr=County }

    { 12  ;2   ;Field     ;
                SourceExpr="Search Name" }

    { 13  ;1   ;Group     ;
                CaptionML=ENU=Communication }

    { 8   ;2   ;Field     ;
                SourceExpr="Phone No." }

    { 22  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 15  ;1   ;Part      ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 14  ;1   ;Part      ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      NoFieldVisible@1000000000 : Boolean;

    LOCAL PROCEDURE SetNoFieldVisible@13();
    VAR
      ExampleDocumentNoVisibility@1000 : Codeunit 51400;
    BEGIN
      NoFieldVisible := ExampleDocumentNoVisibility.ExamplePersonNoIsVisible;
    END;

    BEGIN
    END.
  }
}

OBJECT Page 50011 Example Person List
{
  OBJECT-PROPERTIES
  {
    Date=14-03-15;
    Time=16:34:03;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Example Master Data List;
    SourceTable=Table50010;
    PageType=List;
    CardPageID=Example Person Card;
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                SourceExpr="No." }

    { 4   ;2   ;Field     ;
                SourceExpr=Name }

    { 5   ;2   ;Field     ;
                SourceExpr=Address }

    { 6   ;2   ;Field     ;
                SourceExpr=City }

    { 7   ;2   ;Field     ;
                SourceExpr="Country/Region Code" }

    { 8   ;2   ;Field     ;
                SourceExpr="Phone No." }

    { 11  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 10  ;1   ;Part      ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 9   ;1   ;Part      ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50020 Example Product Card
{
  OBJECT-PROPERTIES
  {
    Date=26-05-15;
    Time=15:48:11;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
    SourceTable=Table50020;
    PageType=Card;
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             IF AssistEdit THEN
                               CurrPage.UPDATE;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

    { 5   ;2   ;Field     ;
                SourceExpr="Search Description" }

    { 6   ;2   ;Field     ;
                SourceExpr="Description 2" }

    { 12  ;2   ;Field     ;
                SourceExpr=Blocked }

    { 10  ;1   ;Group     ;
                Name=Price;
                GroupType=Group }

    { 11  ;2   ;Field     ;
                SourceExpr="Sales Price" }

    { 9   ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 8   ;1   ;Part      ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 7   ;1   ;Part      ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Page 50021 Example Product List
{
  OBJECT-PROPERTIES
  {
    Date=14-03-15;
    Time=16:35:55;
    Modified=Yes;
    Version List=Exercise 2;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table50020;
    PageType=List;
    CardPageID=Example Product Card;
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                SourceExpr="No." }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

    { 7   ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 6   ;1   ;Part      ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 5   ;1   ;Part      ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {

    BEGIN
    END.
  }
}

