OBJECT Codeunit 60003 Example Jnl.-Post Line
{
  OBJECT-PROPERTIES
  {
    Date=27-01-17;
    Time=13:41:17;
    Modified=Yes;
    Version List=Exercise 3;
  }
  PROPERTIES
  {
    TableNo=50013;
    Permissions=TableData 50011=imd,
                TableData 50015=imd,
                TableData 951=m,
                TableData 952=m;
    OnRun=BEGIN
            IF NOT TestNearAndTestFar(Rec) THEN
              EXIT;

            IsolateTransactionAndFindLastEntryNumber;
            CreateOrUpdateRegister("Source Code", "Journal Batch Name");
            CreateEntry(Rec);
          END;

  }
  CODE
  {
    VAR
      ExReg@1003 : Record 50015;
      NextEntryNo@1008 : Integer;

    LOCAL PROCEDURE TestNearAndTestFar@5(ExJnlLine@1000 : Record 50013) : Boolean;
    VAR
      ExJnlCheckLine@1001 : Codeunit 50002;
    BEGIN
      WITH ExJnlLine DO
        IF EmptyLine THEN
          EXIT(FALSE);

      ExJnlCheckLine.RunCheck(ExJnlLine);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE IsolateTransactionAndFindLastEntryNumber@6();
    VAR
      ExLedgEntry@1000 : Record 50011;
    BEGIN
      IF NextEntryNo = 0 THEN BEGIN
        ExLedgEntry.LOCKTABLE;
        IF ExLedgEntry.FINDLAST THEN
          NextEntryNo := ExLedgEntry."Entry No.";
        NextEntryNo := NextEntryNo + 1;
      END;
    END;

    LOCAL PROCEDURE CreateOrUpdateRegister@7(SourceCode@1000 : Code[10];JournalBatchName@1001 : Code[10]);
    BEGIN
      IF ExReg."No." = 0 THEN BEGIN
        ExReg.LOCKTABLE;
        IF (NOT ExReg.FINDLAST) OR (ExReg."To Entry No." <> 0) THEN BEGIN
          ExReg.INIT;
          ExReg."No." := ExReg."No." + 1;
          ExReg."From Entry No." := NextEntryNo;
          ExReg."To Entry No." := NextEntryNo;
          ExReg."Creation Date" := TODAY;
          ExReg."Source Code" := SourceCode;
          ExReg."Journal Batch Name" := JournalBatchName;
          ExReg."User ID" := USERID;
          ExReg.INSERT;
        END;
      END;
      ExReg."To Entry No." := NextEntryNo;
      ExReg.MODIFY;
    END;

    LOCAL PROCEDURE CreateEntry@1(VAR ExJnlLine@1000 : Record 50013);
    VAR
      ExLedgEntry@1001 : Record 50011;
    BEGIN
      WITH ExJnlLine DO BEGIN
        IF "Document Date" = 0D THEN
          "Document Date" := "Posting Date";

        ExLedgEntry.INIT;
        ExLedgEntry."Entry Type" := "Entry Type";
        ExLedgEntry."Document No." := "Document No.";
        ExLedgEntry."Posting Date" := "Posting Date";
        ExLedgEntry."Document Date" := "Document Date";
        ExLedgEntry."Example Person No." := "Example Person No.";
        ExLedgEntry."Example Product No." := "Example Product No.";
        ExLedgEntry.Description := Description;
        ExLedgEntry.Quantity := Quantity;
        ExLedgEntry."Global Dimension 1 Code" := "Shortcut Dimension 1 Code";
        ExLedgEntry."Global Dimension 2 Code" := "Shortcut Dimension 2 Code";
        ExLedgEntry."Dimension Set ID" := "Dimension Set ID";
        ExLedgEntry."Source Code" := "Source Code";
        ExLedgEntry."Journal Batch Name" := "Journal Batch Name";
        ExLedgEntry."Reason Code" := "Reason Code";
        ExLedgEntry."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        ExLedgEntry."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
        ExLedgEntry."No. Series" := "Posting No. Series";

        WITH ExLedgEntry DO BEGIN
          IF "Entry Type" = "Entry Type"::Sale THEN
            Quantity := -Quantity;
          "User ID" := USERID;
          "Entry No." := NextEntryNo;
        END;

        ExLedgEntry.INSERT;

        NextEntryNo := NextEntryNo + 1;
      END;
    END;

    BEGIN
    END.
  }
}

