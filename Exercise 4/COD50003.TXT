OBJECT Codeunit 50003 Ex. Jnl.-Post Line
{
  OBJECT-PROPERTIES
  {
    Date=15-12-15;
    Time=16:38:52;
    Modified=Yes;
    Version List=Exercise 3;
  }
  PROPERTIES
  {
    TableNo=50013;
    Permissions=TableData 50011=imd,
                TableData 50015=imd,
                TableData 951=m,
                TableData 952=m;
    OnRun=BEGIN
            GetGLSetup;
            RunWithCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      GLSetup@1010 : Record 98;
      ExJnlLine@1000 : Record 50013;
      ExLedgEntry@1001 : Record 50011;
      ExamplePerson@1002 : Record 50010;
      ExReg@1003 : Record 50015;
      ExJnlCheckLine@1006 : Codeunit 50002;
      NextEntryNo@1008 : Integer;
      GLSetupRead@1009 : Boolean;
      ExJnlPostLineHook@1004 : Codeunit 50031;

    PROCEDURE GetExReg@2(VAR NewExReg@1000 : Record 50015);
    BEGIN
      NewExReg := ExReg;
    END;

    PROCEDURE RunWithCheck@3(VAR ExJnlLine2@1000 : Record 50013);
    BEGIN
      ExJnlLine.COPY(ExJnlLine2);
      Code;
      ExJnlLine2 := ExJnlLine;
    END;

    LOCAL PROCEDURE Code@1();
    BEGIN
      WITH ExJnlLine DO BEGIN
        IF EmptyLine THEN
          EXIT;

        ExJnlCheckLine.RunCheck(ExJnlLine);

        ExJnlPostLineHook.OnAfterEmptyLine;

        IF NextEntryNo = 0 THEN BEGIN
          ExLedgEntry.LOCKTABLE;
          IF ExLedgEntry.FINDLAST THEN
            NextEntryNo := ExLedgEntry."Entry No.";
          NextEntryNo := NextEntryNo + 1;
        END;

        IF "Document Date" = 0D THEN
          "Document Date" := "Posting Date";

        IF ExReg."No." = 0 THEN BEGIN
          ExReg.LOCKTABLE;
          IF (NOT ExReg.FINDLAST) OR (ExReg."To Entry No." <> 0) THEN BEGIN
            ExReg.INIT;
            ExReg."No." := ExReg."No." + 1;
            ExReg."From Entry No." := NextEntryNo;
            ExReg."To Entry No." := NextEntryNo;
            ExReg."Creation Date" := TODAY;
            ExReg."Source Code" := "Source Code";
            ExReg."Journal Batch Name" := "Journal Batch Name";
            ExReg."User ID" := USERID;
            ExReg.INSERT;
          END;
        END;
        ExReg."To Entry No." := NextEntryNo;
        ExReg.MODIFY;

        ExLedgEntry.INIT;
        ExLedgEntry."Entry Type" := "Entry Type";
        ExLedgEntry."Document No." := "Document No.";
        ExLedgEntry."Posting Date" := "Posting Date";
        ExLedgEntry."Document Date" := "Document Date";
        ExLedgEntry."Example Person No." := "Example Person No.";
        ExLedgEntry."Example Product No." := "Example Product No.";
        ExLedgEntry.Description := Description;
        ExLedgEntry.Quantity := Quantity;
        ExLedgEntry."Global Dimension 1 Code" := "Shortcut Dimension 1 Code";
        ExLedgEntry."Global Dimension 2 Code" := "Shortcut Dimension 2 Code";
        ExLedgEntry."Dimension Set ID" := "Dimension Set ID";
        ExLedgEntry."Source Code" := "Source Code";
        ExLedgEntry."Journal Batch Name" := "Journal Batch Name";
        ExLedgEntry."Reason Code" := "Reason Code";
        ExLedgEntry."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        ExLedgEntry."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
        ExLedgEntry."No. Series" := "Posting No. Series";
        GetGLSetup;

        WITH ExLedgEntry DO BEGIN
          IF "Entry Type" = "Entry Type"::Sale THEN
            Quantity := -Quantity;
          "User ID" := USERID;
          "Entry No." := NextEntryNo;
        END;

        ExLedgEntry.INSERT;

        NextEntryNo := NextEntryNo + 1;
      END;
    END;

    LOCAL PROCEDURE GetGLSetup@14();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    BEGIN
    END.
  }
}

